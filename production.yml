# This is a transitional production configuration.
# Redis and celery will be external services in the final production configuration.
# Traffic or NGINX may or may not be used in the final production configuration
# but the Django container will not expose its port to the host (there will be more than one container).
version: "3"

volumes:
  ami_postgres_backups:
    driver: local
    driver_opts:
      type: none
      device: ./backups/production/postgres
      o: bind

services:
  django: &django
    build:
      context: .
      # This is the most important setting to test the production configuration of Django.
      dockerfile: ./compose/production/django/Dockerfile
    image: insectai/ami_backend
    depends_on:
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    volumes:
      - ./config:/app/config
    ports:
      - "5001:5000"
    command: /start

  redis:
    image: redis:6
    container_name: ami_redis

  celeryworker:
    <<: *django
    container_name: ami_celeryworker
    scale: 1
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    container_name: ami_celerybeat
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    container_name: ami_flower
    ports:
      - "5550:5555"
    command: /start-flower

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - ami_postgres_backups:/backups:z
