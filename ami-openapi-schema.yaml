openapi: 3.0.3
info:
  title: Automated Monitoring of Insects ML Platform API
  version: 1.0.0 (api)
  description: Documentation of API endpoints of Automated Monitoring of Insects ML
    Platform
paths:
  /api/v2/auth/token/login/:
    post:
      operationId: auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/v2/auth/token/logout/:
    post:
      operationId: auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v2/captures/:
    get:
      operationId: captures_list
      description: API endpoint that allows captures from monitoring sessions to be
        viewed or edited.
      parameters:
      - in: query
        name: collections
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: deployment
        schema:
          type: integer
      - in: query
        name: deployment__project
        schema:
          type: integer
      - in: query
        name: event
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - captures
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSourceImageListList'
          description: ''
    post:
      operationId: captures_create
      description: API endpoint that allows captures from monitoring sessions to be
        viewed or edited.
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImage'
          description: ''
  /api/v2/captures/{id}/:
    get:
      operationId: captures_retrieve
      description: API endpoint that allows captures from monitoring sessions to be
        viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image.
        required: true
      tags:
      - captures
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImage'
          description: ''
    put:
      operationId: captures_update
      description: API endpoint that allows captures from monitoring sessions to be
        viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImage'
          description: ''
    patch:
      operationId: captures_partial_update
      description: API endpoint that allows captures from monitoring sessions to be
        viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSourceImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSourceImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSourceImage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImage'
          description: ''
    delete:
      operationId: captures_destroy
      description: API endpoint that allows captures from monitoring sessions to be
        viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image.
        required: true
      tags:
      - captures
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/captures/{id}/star/:
    post:
      operationId: captures_star_create
      description: Add a source image to the project's starred images collection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImage'
          description: ''
  /api/v2/captures/{id}/unstar/:
    post:
      operationId: captures_unstar_create
      description: Remove a source image from the project's starred images collection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImage'
          description: ''
  /api/v2/captures/collections/:
    get:
      operationId: captures_collections_list
      description: Endpoint for viewing collections or samples of source images.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: method
        schema:
          type: string
          enum:
          - common_combined
          - detections_only
          - greatest_file_size_from_each_event
          - interval
          - last_and_random_from_each_event
          - manual
          - random
          - random_from_each_event
          - starred
          - stratified_random
        description: |-
          * `common_combined` - common_combined
          * `random` - random
          * `stratified_random` - stratified_random
          * `interval` - interval
          * `manual` - manual
          * `starred` - starred
          * `random_from_each_event` - random_from_each_event
          * `last_and_random_from_each_event` - last_and_random_from_each_event
          * `greatest_file_size_from_each_event` - greatest_file_size_from_each_event
          * `detections_only` - detections_only
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - captures
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSourceImageCollectionList'
          description: ''
    post:
      operationId: captures_collections_create
      description: Endpoint for viewing collections or samples of source images.
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageCollection'
          description: ''
  /api/v2/captures/collections/{id}/:
    get:
      operationId: captures_collections_retrieve
      description: Endpoint for viewing collections or samples of source images.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image collection.
        required: true
      tags:
      - captures
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageCollection'
          description: ''
    put:
      operationId: captures_collections_update
      description: Endpoint for viewing collections or samples of source images.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image collection.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageCollection'
          description: ''
    patch:
      operationId: captures_collections_partial_update
      description: Endpoint for viewing collections or samples of source images.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image collection.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSourceImageCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSourceImageCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSourceImageCollection'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageCollection'
          description: ''
    delete:
      operationId: captures_collections_destroy
      description: Endpoint for viewing collections or samples of source images.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image collection.
        required: true
      tags:
      - captures
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/captures/collections/{id}/add/:
    post:
      operationId: captures_collections_add_create
      description: Add a source image to a collection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image collection.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageCollection'
          description: ''
  /api/v2/captures/collections/{id}/populate/:
    post:
      operationId: captures_collections_populate_create
      description: Populate a collection with source images using the configured sampling
        method and arguments.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image collection.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageCollection'
          description: ''
  /api/v2/captures/collections/{id}/remove/:
    post:
      operationId: captures_collections_remove_create
      description: Remove a source image from a collection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image collection.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImageCollection'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageCollection'
          description: ''
  /api/v2/captures/upload/:
    get:
      operationId: captures_upload_list
      description: Endpoint for uploading images.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - captures
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSourceImageUploadList'
          description: ''
    post:
      operationId: captures_upload_create
      description: Endpoint for uploading images.
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImageUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImageUpload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImageUpload'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageUpload'
          description: ''
  /api/v2/captures/upload/{id}/:
    get:
      operationId: captures_upload_retrieve
      description: Endpoint for uploading images.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image upload.
        required: true
      tags:
      - captures
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageUpload'
          description: ''
    put:
      operationId: captures_upload_update
      description: Endpoint for uploading images.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image upload.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceImageUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SourceImageUpload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceImageUpload'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageUpload'
          description: ''
    patch:
      operationId: captures_upload_partial_update
      description: Endpoint for uploading images.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image upload.
        required: true
      tags:
      - captures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSourceImageUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSourceImageUpload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSourceImageUpload'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceImageUpload'
          description: ''
    delete:
      operationId: captures_upload_destroy
      description: Endpoint for uploading images.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image upload.
        required: true
      tags:
      - captures
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/classifications/:
    get:
      operationId: classifications_list
      description: API endpoint for viewing and adding classification results from
        a model.
      parameters:
      - in: query
        name: algorithm
        schema:
          type: integer
      - in: query
        name: detection
        schema:
          type: integer
      - in: query
        name: detection__occurrence
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: taxon
        schema:
          type: integer
      tags:
      - classifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClassificationList'
          description: ''
    post:
      operationId: classifications_create
      description: API endpoint for viewing and adding classification results from
        a model.
      tags:
      - classifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Classification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Classification'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classification'
          description: ''
  /api/v2/classifications/{id}/:
    get:
      operationId: classifications_retrieve
      description: API endpoint for viewing and adding classification results from
        a model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this classification.
        required: true
      tags:
      - classifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classification'
          description: ''
    put:
      operationId: classifications_update
      description: API endpoint for viewing and adding classification results from
        a model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this classification.
        required: true
      tags:
      - classifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Classification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Classification'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classification'
          description: ''
    patch:
      operationId: classifications_partial_update
      description: API endpoint for viewing and adding classification results from
        a model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this classification.
        required: true
      tags:
      - classifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClassification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClassification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClassification'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classification'
          description: ''
    delete:
      operationId: classifications_destroy
      description: API endpoint for viewing and adding classification results from
        a model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this classification.
        required: true
      tags:
      - classifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/deployments/:
    get:
      operationId: deployments_list
      description: |-
        A model viewset that uses different serializers
        for the list and detail views.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - deployments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeploymentListList'
          description: ''
    post:
      operationId: deployments_create
      description: |-
        A model viewset that uses different serializers
        for the list and detail views.
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Deployment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Deployment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
  /api/v2/deployments/{id}/:
    get:
      operationId: deployments_retrieve
      description: |-
        A model viewset that uses different serializers
        for the list and detail views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deployment.
        required: true
      tags:
      - deployments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
    put:
      operationId: deployments_update
      description: |-
        A model viewset that uses different serializers
        for the list and detail views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deployment.
        required: true
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Deployment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Deployment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
    patch:
      operationId: deployments_partial_update
      description: |-
        A model viewset that uses different serializers
        for the list and detail views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deployment.
        required: true
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeployment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeployment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeployment'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
    delete:
      operationId: deployments_destroy
      description: |-
        A model viewset that uses different serializers
        for the list and detail views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deployment.
        required: true
      tags:
      - deployments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/deployments/devices/:
    get:
      operationId: deployments_devices_list
      description: API endpoint that allows devices to be viewed or edited.
      parameters:
      - in: query
        name: deployments
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - deployments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceList'
          description: ''
    post:
      operationId: deployments_devices_create
      description: API endpoint that allows devices to be viewed or edited.
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /api/v2/deployments/devices/{id}/:
    get:
      operationId: deployments_devices_retrieve
      description: API endpoint that allows devices to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Device Configuration.
        required: true
      tags:
      - deployments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    put:
      operationId: deployments_devices_update
      description: API endpoint that allows devices to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Device Configuration.
        required: true
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    patch:
      operationId: deployments_devices_partial_update
      description: API endpoint that allows devices to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Device Configuration.
        required: true
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    delete:
      operationId: deployments_devices_destroy
      description: API endpoint that allows devices to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Device Configuration.
        required: true
      tags:
      - deployments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/deployments/sites/:
    get:
      operationId: deployments_sites_list
      description: API endpoint that allows sites to be viewed or edited.
      parameters:
      - in: query
        name: deployments
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - deployments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSiteList'
          description: ''
    post:
      operationId: deployments_sites_create
      description: API endpoint that allows sites to be viewed or edited.
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
  /api/v2/deployments/sites/{id}/:
    get:
      operationId: deployments_sites_retrieve
      description: API endpoint that allows sites to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Research Site.
        required: true
      tags:
      - deployments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
    put:
      operationId: deployments_sites_update
      description: API endpoint that allows sites to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Research Site.
        required: true
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
    patch:
      operationId: deployments_sites_partial_update
      description: API endpoint that allows sites to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Research Site.
        required: true
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSite'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
    delete:
      operationId: deployments_sites_destroy
      description: API endpoint that allows sites to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Research Site.
        required: true
      tags:
      - deployments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/detections/:
    get:
      operationId: detections_list
      description: API endpoint that allows detections to be viewed or edited.
      parameters:
      - in: query
        name: detection_algorithm
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: source_image
        schema:
          type: integer
      tags:
      - detections
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDetectionListList'
          description: ''
    post:
      operationId: detections_create
      description: API endpoint that allows detections to be viewed or edited.
      tags:
      - detections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
  /api/v2/detections/{id}/:
    get:
      operationId: detections_retrieve
      description: API endpoint that allows detections to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this detection.
        required: true
      tags:
      - detections
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    put:
      operationId: detections_update
      description: API endpoint that allows detections to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this detection.
        required: true
      tags:
      - detections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    patch:
      operationId: detections_partial_update
      description: API endpoint that allows detections to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this detection.
        required: true
      tags:
      - detections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDetection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDetection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDetection'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    delete:
      operationId: detections_destroy
      description: API endpoint that allows detections to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this detection.
        required: true
      tags:
      - detections
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/events/:
    get:
      operationId: events_list
      description: API endpoint that allows events to be viewed or edited.
      parameters:
      - in: query
        name: deployment
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - events
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventListList'
          description: ''
    post:
      operationId: events_create
      description: API endpoint that allows events to be viewed or edited.
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v2/events/{id}/:
    get:
      operationId: events_retrieve
      description: API endpoint that allows events to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: events_update
      description: API endpoint that allows events to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: events_partial_update
      description: API endpoint that allows events to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: events_destroy
      description: API endpoint that allows events to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/identifications/:
    get:
      operationId: identifications_list
      description: API endpoint that allows identifications to be viewed or edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: occurrence
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: taxon
        schema:
          type: integer
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - identifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIdentificationList'
          description: ''
    post:
      operationId: identifications_create
      description: API endpoint that allows identifications to be viewed or edited.
      tags:
      - identifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Identification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Identification'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identification'
          description: ''
  /api/v2/identifications/{id}/:
    get:
      operationId: identifications_retrieve
      description: API endpoint that allows identifications to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this identification.
        required: true
      tags:
      - identifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identification'
          description: ''
    put:
      operationId: identifications_update
      description: API endpoint that allows identifications to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this identification.
        required: true
      tags:
      - identifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Identification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Identification'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identification'
          description: ''
    patch:
      operationId: identifications_partial_update
      description: API endpoint that allows identifications to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this identification.
        required: true
      tags:
      - identifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIdentification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIdentification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIdentification'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identification'
          description: ''
    delete:
      operationId: identifications_destroy
      description: API endpoint that allows identifications to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this identification.
        required: true
      tags:
      - identifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/jobs/:
    get:
      operationId: jobs_list
      description: |-
        API endpoint that allows jobs to be viewed or edited.

        Pass the ``start_now`` url parameter to the ``POST`` method to enqueue the job immediately.

        Use the `delay` field to create a test job with fake duration of work (in seconds).

        ## Actions

        ### `/jobs/{id}/run/` (`POST`)

        Run a job (add it to the queue).

        ### `/jobs/{id}/cancel/` (`POST`)

        Cancel a job (terminate the background task)
      parameters:
      - in: query
        name: deployment
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pipeline
        schema:
          type: integer
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: source_image_collection
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CANCELING
          - CREATED
          - FAILURE
          - PENDING
          - RECEIVED
          - RETRY
          - REVOKED
          - STARTED
          - SUCCESS
          - UNKNOWN
        description: |-
          * `CREATED` - CREATED
          * `PENDING` - PENDING
          * `STARTED` - STARTED
          * `SUCCESS` - SUCCESS
          * `FAILURE` - FAILURE
          * `RETRY` - RETRY
          * `CANCELING` - CANCELING
          * `REVOKED` - REVOKED
          * `RECEIVED` - RECEIVED
          * `UNKNOWN` - UNKNOWN
      tags:
      - jobs
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobListList'
          description: ''
    post:
      operationId: jobs_create
      description: |-
        API endpoint that allows jobs to be viewed or edited.

        Pass the ``start_now`` url parameter to the ``POST`` method to enqueue the job immediately.

        Use the `delay` field to create a test job with fake duration of work (in seconds).

        ## Actions

        ### `/jobs/{id}/run/` (`POST`)

        Run a job (add it to the queue).

        ### `/jobs/{id}/cancel/` (`POST`)

        Cancel a job (terminate the background task)
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/v2/jobs/{id}/:
    get:
      operationId: jobs_retrieve
      description: |-
        API endpoint that allows jobs to be viewed or edited.

        Pass the ``start_now`` url parameter to the ``POST`` method to enqueue the job immediately.

        Use the `delay` field to create a test job with fake duration of work (in seconds).

        ## Actions

        ### `/jobs/{id}/run/` (`POST`)

        Run a job (add it to the queue).

        ### `/jobs/{id}/cancel/` (`POST`)

        Cancel a job (terminate the background task)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    put:
      operationId: jobs_update
      description: |-
        API endpoint that allows jobs to be viewed or edited.

        Pass the ``start_now`` url parameter to the ``POST`` method to enqueue the job immediately.

        Use the `delay` field to create a test job with fake duration of work (in seconds).

        ## Actions

        ### `/jobs/{id}/run/` (`POST`)

        Run a job (add it to the queue).

        ### `/jobs/{id}/cancel/` (`POST`)

        Cancel a job (terminate the background task)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    patch:
      operationId: jobs_partial_update
      description: |-
        API endpoint that allows jobs to be viewed or edited.

        Pass the ``start_now`` url parameter to the ``POST`` method to enqueue the job immediately.

        Use the `delay` field to create a test job with fake duration of work (in seconds).

        ## Actions

        ### `/jobs/{id}/run/` (`POST`)

        Run a job (add it to the queue).

        ### `/jobs/{id}/cancel/` (`POST`)

        Cancel a job (terminate the background task)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJob'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: jobs_destroy
      description: |-
        API endpoint that allows jobs to be viewed or edited.

        Pass the ``start_now`` url parameter to the ``POST`` method to enqueue the job immediately.

        Use the `delay` field to create a test job with fake duration of work (in seconds).

        ## Actions

        ### `/jobs/{id}/run/` (`POST`)

        Run a job (add it to the queue).

        ### `/jobs/{id}/cancel/` (`POST`)

        Cancel a job (terminate the background task)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/jobs/{id}/cancel/:
    post:
      operationId: jobs_cancel_create
      description: Cancel a job (terminate the background task)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/v2/jobs/{id}/run/:
    post:
      operationId: jobs_run_create
      description: Run a job (add it to the queue).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/v2/labelstudio/captures/:
    get:
      operationId: labelstudio_captures_list
      description: Endpoint for importing data to annotate in Label Studio.
      parameters:
      - in: query
        name: deployment
        schema:
          type: integer
      - in: query
        name: deployment__project
        schema:
          type: integer
      - in: query
        name: event
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelStudioSourceImageList'
          description: ''
  /api/v2/labelstudio/captures/{id}/:
    get:
      operationId: labelstudio_captures_retrieve
      description: Endpoint for importing data to annotate in Label Studio.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source image.
        required: true
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelStudioSourceImage'
          description: ''
  /api/v2/labelstudio/captures/interval/:
    get:
      operationId: labelstudio_captures_interval_retrieve
      description: |-
        Return a sample of captures based on time intervals.
        URL parameters:
        - `deployment`: limit to a specific deployment<br>
        - `project`: limit to all deployments in a specific project<br>
        - `event_day_interval`: number of days between events<br>
        - `capture_minute_interval`: number of minutes between captures<br>
        - `limit`: maximum number of captures to return<br>
        Example: `/api/labelstudio/captures/interval/?project=1&event_day_interval=3&capture_minute_interval=30&limit=100`  # noqa
        Objects are returned in a format ready to import as a list of Label Studio tasks.
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelStudioSourceImage'
          description: ''
  /api/v2/labelstudio/config/all_in_one/:
    get:
      operationId: labelstudio_config_all_in_one_retrieve
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/labelstudio/config/binaryclassification/:
    get:
      operationId: labelstudio_config_binaryclassification_retrieve
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/labelstudio/config/objectdetection/:
    get:
      operationId: labelstudio_config_objectdetection_retrieve
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/labelstudio/config/speciesclassification/:
    get:
      operationId: labelstudio_config_speciesclassification_retrieve
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/labelstudio/config/taxonomy/:
    get:
      operationId: labelstudio_config_taxonomy_retrieve
      description: |-
        Provide the species choices via an API endpoint.

        https://labelstud.io/tags/taxonomy.html

        Label studio may pass an array of path[] params to specify which children to return.
        For example:
        /taxonomy?path[]=root&path[]=child1 to return only nested children of child1

        Because names are unique, we will only consider the last path[] param and return
        all children of that node.

        It is required to return the display name
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/labelstudio/detections/:
    get:
      operationId: labelstudio_detections_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: source_image__deployment
        schema:
          type: integer
      - in: query
        name: source_image__deployment__project
        schema:
          type: integer
      - in: query
        name: source_image__event
        schema:
          type: integer
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelStudioDetectionList'
          description: ''
  /api/v2/labelstudio/detections/{id}/:
    get:
      operationId: labelstudio_detections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this detection.
        required: true
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelStudioDetection'
          description: ''
  /api/v2/labelstudio/hooks/all/:
    post:
      operationId: labelstudio_hooks_all_create
      description: Endpoints for Label Studio to send data to.
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/labelstudio/occurrences/:
    get:
      operationId: labelstudio_occurrences_list
      parameters:
      - in: query
        name: deployment
        schema:
          type: integer
      - in: query
        name: event
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelStudioOccurrenceList'
          description: ''
  /api/v2/labelstudio/occurrences/{id}/:
    get:
      operationId: labelstudio_occurrences_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this occurrence.
        required: true
      tags:
      - labelstudio
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelStudioOccurrence'
          description: ''
  /api/v2/ml/algorithms/:
    get:
      operationId: ml_algorithms_list
      description: API endpoint that allows algorithm (ML models) to be viewed or
        edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: version
        schema:
          type: integer
      tags:
      - ml
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlgorithmList'
          description: ''
    post:
      operationId: ml_algorithms_create
      description: API endpoint that allows algorithm (ML models) to be viewed or
        edited.
      tags:
      - ml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Algorithm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Algorithm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Algorithm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
  /api/v2/ml/algorithms/{id}/:
    get:
      operationId: ml_algorithms_retrieve
      description: API endpoint that allows algorithm (ML models) to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this algorithm.
        required: true
      tags:
      - ml
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
    put:
      operationId: ml_algorithms_update
      description: API endpoint that allows algorithm (ML models) to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this algorithm.
        required: true
      tags:
      - ml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Algorithm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Algorithm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Algorithm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
    patch:
      operationId: ml_algorithms_partial_update
      description: API endpoint that allows algorithm (ML models) to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this algorithm.
        required: true
      tags:
      - ml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlgorithm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlgorithm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlgorithm'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
    delete:
      operationId: ml_algorithms_destroy
      description: API endpoint that allows algorithm (ML models) to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this algorithm.
        required: true
      tags:
      - ml
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/ml/pipelines/:
    get:
      operationId: ml_pipelines_list
      description: API endpoint that allows pipelines to be viewed or edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - ml
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPipelineList'
          description: ''
    post:
      operationId: ml_pipelines_create
      description: API endpoint that allows pipelines to be viewed or edited.
      tags:
      - ml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pipeline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pipeline'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: ''
  /api/v2/ml/pipelines/{id}/:
    get:
      operationId: ml_pipelines_retrieve
      description: API endpoint that allows pipelines to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pipeline.
        required: true
      tags:
      - ml
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: ''
    put:
      operationId: ml_pipelines_update
      description: API endpoint that allows pipelines to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pipeline.
        required: true
      tags:
      - ml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pipeline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pipeline'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: ''
    patch:
      operationId: ml_pipelines_partial_update
      description: API endpoint that allows pipelines to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pipeline.
        required: true
      tags:
      - ml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPipeline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPipeline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPipeline'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: ''
    delete:
      operationId: ml_pipelines_destroy
      description: API endpoint that allows pipelines to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pipeline.
        required: true
      tags:
      - ml
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/occurrences/:
    get:
      operationId: occurrences_list
      description: API endpoint that allows occurrences to be viewed or edited.
      parameters:
      - in: query
        name: deployment
        schema:
          type: integer
      - in: query
        name: determination
        schema:
          type: integer
      - in: query
        name: determination__rank
        schema:
          type: string
          enum:
          - FAMILY
          - GENUS
          - ORDER
          - SPECIES
          - SUBFAMILY
          - SUBTRIBE
          - SUPERFAMILY
          - TRIBE
          - UNKNOWN
        description: |-
          * `ORDER` - Order
          * `SUPERFAMILY` - Superfamily
          * `FAMILY` - Family
          * `SUBFAMILY` - Subfamily
          * `TRIBE` - Tribe
          * `SUBTRIBE` - Subtribe
          * `GENUS` - Genus
          * `SPECIES` - Species
          * `UNKNOWN` - Unknown
      - in: query
        name: event
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - occurrences
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOccurrenceListList'
          description: ''
    post:
      operationId: occurrences_create
      description: API endpoint that allows occurrences to be viewed or edited.
      tags:
      - occurrences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Occurrence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Occurrence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Occurrence'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Occurrence'
          description: ''
  /api/v2/occurrences/{id}/:
    get:
      operationId: occurrences_retrieve
      description: API endpoint that allows occurrences to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this occurrence.
        required: true
      tags:
      - occurrences
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Occurrence'
          description: ''
    put:
      operationId: occurrences_update
      description: API endpoint that allows occurrences to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this occurrence.
        required: true
      tags:
      - occurrences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Occurrence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Occurrence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Occurrence'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Occurrence'
          description: ''
    patch:
      operationId: occurrences_partial_update
      description: API endpoint that allows occurrences to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this occurrence.
        required: true
      tags:
      - occurrences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOccurrence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOccurrence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOccurrence'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Occurrence'
          description: ''
    delete:
      operationId: occurrences_destroy
      description: API endpoint that allows occurrences to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this occurrence.
        required: true
      tags:
      - occurrences
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/pages/:
    get:
      operationId: pages_list
      description: API endpoint that allows pages to be viewed or edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: link_class
        schema:
          type: string
      - in: query
        name: nav_level
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - in: query
        name: published
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - pages
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPageListList'
          description: ''
    post:
      operationId: pages_create
      description: API endpoint that allows pages to be viewed or edited.
      tags:
      - pages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Page'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Page'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: ''
  /api/v2/pages/{slug}/:
    get:
      operationId: pages_retrieve
      description: API endpoint that allows pages to be viewed or edited.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          description: Unique, URL safe name e.g. about-us
        required: true
      tags:
      - pages
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: ''
    put:
      operationId: pages_update
      description: API endpoint that allows pages to be viewed or edited.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          description: Unique, URL safe name e.g. about-us
        required: true
      tags:
      - pages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Page'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Page'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: ''
    patch:
      operationId: pages_partial_update
      description: API endpoint that allows pages to be viewed or edited.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          description: Unique, URL safe name e.g. about-us
        required: true
      tags:
      - pages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: ''
    delete:
      operationId: pages_destroy
      description: API endpoint that allows pages to be viewed or edited.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          description: Unique, URL safe name e.g. about-us
        required: true
      tags:
      - pages
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/projects/:
    get:
      operationId: projects_list
      description: API endpoint that allows projects to be viewed or edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectListList'
          description: ''
    post:
      operationId: projects_create
      description: API endpoint that allows projects to be viewed or edited.
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v2/projects/{id}/:
    get:
      operationId: projects_retrieve
      description: API endpoint that allows projects to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      description: API endpoint that allows projects to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      description: API endpoint that allows projects to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      description: API endpoint that allows projects to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/status/storage/:
    post:
      operationId: status_storage_create
      description: '@TODO not totally sure how to use the serializer here yet.'
      tags:
      - status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StorageStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StorageStatus'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageStatus'
          description: ''
  /api/v2/status/summary/:
    get:
      operationId: status_summary_retrieve
      description: Return counts of all models.
      tags:
      - status
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v2/storage/:
    get:
      operationId: storage_list
      description: API endpoint that allows storage sources to be viewed or edited.
      parameters:
      - in: query
        name: deployments
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - storage
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStorageSourceList'
          description: ''
    post:
      operationId: storage_create
      description: API endpoint that allows storage sources to be viewed or edited.
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StorageSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StorageSource'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSource'
          description: ''
  /api/v2/storage/{id}/:
    get:
      operationId: storage_retrieve
      description: API endpoint that allows storage sources to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this s3 storage source.
        required: true
      tags:
      - storage
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSource'
          description: ''
    put:
      operationId: storage_update
      description: API endpoint that allows storage sources to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this s3 storage source.
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StorageSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StorageSource'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSource'
          description: ''
    patch:
      operationId: storage_partial_update
      description: API endpoint that allows storage sources to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this s3 storage source.
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStorageSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStorageSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStorageSource'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSource'
          description: ''
    delete:
      operationId: storage_destroy
      description: API endpoint that allows storage sources to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this s3 storage source.
        required: true
      tags:
      - storage
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/taxa/:
    get:
      operationId: taxa_list
      description: API endpoint that allows taxa to be viewed or edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: occurrences__deployment
        schema:
          type: integer
      - in: query
        name: occurrences__event
        schema:
          type: integer
      - in: query
        name: occurrences__project
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: parent
        schema:
          type: integer
      - in: query
        name: projects
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: rank
        schema:
          type: string
          enum:
          - FAMILY
          - GENUS
          - ORDER
          - SPECIES
          - SUBFAMILY
          - SUBTRIBE
          - SUPERFAMILY
          - TRIBE
          - UNKNOWN
        description: |-
          * `ORDER` - Order
          * `SUPERFAMILY` - Superfamily
          * `FAMILY` - Family
          * `SUBFAMILY` - Subfamily
          * `TRIBE` - Tribe
          * `SUBTRIBE` - Subtribe
          * `GENUS` - Genus
          * `SPECIES` - Species
          * `UNKNOWN` - Unknown
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - taxa
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaxonListList'
          description: ''
    post:
      operationId: taxa_create
      description: API endpoint that allows taxa to be viewed or edited.
      tags:
      - taxa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Taxon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Taxon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Taxon'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxon'
          description: ''
  /api/v2/taxa/{id}/:
    get:
      operationId: taxa_retrieve
      description: API endpoint that allows taxa to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this taxon.
        required: true
      tags:
      - taxa
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxon'
          description: ''
    put:
      operationId: taxa_update
      description: API endpoint that allows taxa to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this taxon.
        required: true
      tags:
      - taxa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Taxon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Taxon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Taxon'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxon'
          description: ''
    patch:
      operationId: taxa_partial_update
      description: API endpoint that allows taxa to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this taxon.
        required: true
      tags:
      - taxa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaxon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaxon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaxon'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxon'
          description: ''
    delete:
      operationId: taxa_destroy
      description: API endpoint that allows taxa to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this taxon.
        required: true
      tags:
      - taxa
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/taxa/suggest/:
    get:
      operationId: taxa_suggest_retrieve
      description: Return a list of taxa that match the query.
      tags:
      - taxa
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxon'
          description: ''
  /api/v2/users/:
    get:
      operationId: users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/v2/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/users/activation/:
    post:
      operationId: users_activation_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v2/users/me/:
    get:
      operationId: users_me_retrieve
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
    put:
      operationId: users_me_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurrentUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
    patch:
      operationId: users_me_partial_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
    delete:
      operationId: users_me_destroy
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/users/resend_activation/:
    post:
      operationId: users_resend_activation_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v2/users/reset_email/:
    post:
      operationId: users_reset_email_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v2/users/reset_email_confirm/:
    post:
      operationId: users_reset_email_confirm_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v2/users/reset_password/:
    post:
      operationId: users_reset_password_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v2/users/reset_password_confirm/:
    post:
      operationId: users_reset_password_confirm_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v2/users/set_email/:
    post:
      operationId: users_set_email_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v2/users/set_password/:
    post:
      operationId: users_set_password_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Algorithm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        key:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        url:
          type: string
          format: uri
          maxLength: 200
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        version_name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - details
      - id
      - key
      - name
      - updated_at
    CaptureDetections:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          nullable: true
          readOnly: true
        width:
          type: integer
          nullable: true
          readOnly: true
        height:
          type: integer
          nullable: true
          readOnly: true
        bbox:
          type: object
          additionalProperties: {}
          nullable: true
        occurrence:
          allOf:
          - $ref: '#/components/schemas/CaptureOccurrence'
          readOnly: true
        classifications:
          type: string
          description: Return URL to the classifications endpoint filtered by this
            detection.
          readOnly: true
      required:
      - classifications
      - height
      - id
      - occurrence
      - url
      - width
    CaptureOccurrence:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        determination:
          allOf:
          - $ref: '#/components/schemas/TaxonNoParentNested'
          readOnly: true
        determination_score:
          type: number
          format: double
          nullable: true
        determination_algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          readOnly: true
      required:
      - details
      - determination
      - determination_algorithm
      - id
    CaptureTaxon:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        parent:
          allOf:
          - $ref: '#/components/schemas/TaxonParentNested'
          readOnly: true
        rank:
          $ref: '#/components/schemas/RankEnum'
        details:
          type: string
          format: uri
          readOnly: true
      required:
      - details
      - id
      - name
      - parent
    Classification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        taxon:
          allOf:
          - $ref: '#/components/schemas/TaxonNested'
          readOnly: true
        score:
          type: number
          format: double
          nullable: true
        algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - algorithm
      - created_at
      - details
      - id
      - taxon
    CurrentUser:
      type: object
      description: |-
        Make additional private fields available for the current user.

        This is used for the `/users/me/` endpoint.
        `email` is read-only because it needs be changed via the `/users/set_email/` endpoint.
        `password` must be changed via the `/users/reset_password/` endpoint.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of User
          maxLength: 255
        details:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        identifications:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
      required:
      - details
      - email
      - id
      - identifications
    Deployment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        details:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentEventNested'
          readOnly: true
        occurrences:
          type: string
          readOnly: true
        events_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        captures_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        occurrences_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        taxa_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectNested'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        first_date:
          type: string
          format: date
          nullable: true
          readOnly: true
        last_date:
          type: string
          format: date
          nullable: true
          readOnly: true
        device:
          allOf:
          - $ref: '#/components/schemas/DeviceNested'
          readOnly: true
        research_site:
          allOf:
          - $ref: '#/components/schemas/SiteNested'
          readOnly: true
        project_id:
          type: integer
          writeOnly: true
        device_id:
          type: integer
          writeOnly: true
        research_site_id:
          type: integer
          writeOnly: true
        data_source:
          type: string
          readOnly: true
        data_source_id:
          type: integer
          writeOnly: true
        description:
          type: string
        example_captures:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentCaptureNested'
          readOnly: true
      required:
      - created_at
      - data_source
      - details
      - device
      - events
      - example_captures
      - first_date
      - id
      - last_date
      - name
      - occurrences
      - project
      - project_id
      - research_site
      - updated_at
    DeploymentCaptureNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        url:
          type: string
          description: |-
            Return the public URL for this image.

            The base URL is determined by the deployment's data source and is cached
            on the source image. If the deployment's data source changes, the URLs
            for all source images will be updated.

            @TODO use signed URLs if necessary.
            @TODO add support for thumbnail URLs here?
            @TODO consider if we ever need to access the original image directly!
          readOnly: true
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        event:
          allOf:
          - $ref: '#/components/schemas/EventNested'
          readOnly: true
      required:
      - details
      - event
      - id
      - url
    DeploymentEventNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        occurrences_count:
          type: integer
          nullable: true
          readOnly: true
        taxa_count:
          type: integer
          readOnly: true
      required:
      - details
      - id
      - name
      - occurrences_count
      - taxa_count
    DeploymentList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        details:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        events:
          type: string
          readOnly: true
        occurrences:
          type: string
          readOnly: true
        events_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        captures_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        occurrences_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        taxa_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectNested'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        first_date:
          type: string
          format: date
          nullable: true
          readOnly: true
        last_date:
          type: string
          format: date
          nullable: true
          readOnly: true
        device:
          allOf:
          - $ref: '#/components/schemas/DeviceNested'
          readOnly: true
        research_site:
          allOf:
          - $ref: '#/components/schemas/SiteNested'
          readOnly: true
      required:
      - created_at
      - details
      - device
      - events
      - first_date
      - id
      - last_date
      - name
      - occurrences
      - project
      - research_site
      - updated_at
    DeploymentNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        details:
          type: string
          format: uri
          readOnly: true
      required:
      - details
      - id
      - name
    DeploymentNestedSerializerWithLocationAndCounts:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        image:
          type: string
          format: uri
          nullable: true
        details:
          type: string
          format: uri
          readOnly: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        events_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - details
      - id
      - name
    Detection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        bbox:
          type: object
          additionalProperties: {}
          nullable: true
        width:
          type: integer
          nullable: true
          readOnly: true
        height:
          type: integer
          nullable: true
          readOnly: true
        occurrence:
          type: string
          format: uri
          nullable: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        source_image:
          type: string
          format: uri
        detection_algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          readOnly: true
        url:
          type: string
          nullable: true
          readOnly: true
        detection_algorithm_id:
          type: integer
          writeOnly: true
      required:
      - details
      - detection_algorithm
      - detection_algorithm_id
      - height
      - id
      - source_image
      - url
      - width
    DetectionCaptureNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        url:
          type: string
          description: |-
            Return the public URL for this image.

            The base URL is determined by the deployment's data source and is cached
            on the source image. If the deployment's data source changes, the URLs
            for all source images will be updated.

            @TODO use signed URLs if necessary.
            @TODO add support for thumbnail URLs here?
            @TODO consider if we ever need to access the original image directly!
          readOnly: true
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - details
      - id
      - url
    DetectionList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        bbox:
          type: object
          additionalProperties: {}
          nullable: true
        width:
          type: integer
          nullable: true
          readOnly: true
        height:
          type: integer
          nullable: true
          readOnly: true
        occurrence:
          type: string
          format: uri
          nullable: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        source_image:
          type: string
          format: uri
        detection_algorithm:
          type: string
          format: uri
          nullable: true
        url:
          type: string
          nullable: true
          readOnly: true
      required:
      - details
      - height
      - id
      - source_image
      - url
      - width
    DetectionNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        url:
          type: string
          nullable: true
          readOnly: true
        capture:
          allOf:
          - $ref: '#/components/schemas/DetectionCaptureNested'
          readOnly: true
        width:
          type: integer
          nullable: true
          readOnly: true
        height:
          type: integer
          nullable: true
          readOnly: true
        bbox:
          type: object
          additionalProperties: {}
          nullable: true
        occurrence:
          type: string
          format: uri
          nullable: true
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
          readOnly: true
      required:
      - capture
      - classifications
      - height
      - id
      - url
      - width
    Device:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 80
        description:
          type: string
        project:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - details
      - id
      - name
      - project
      - updated_at
    DeviceNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        details:
          type: string
          format: uri
          readOnly: true
      required:
      - details
      - id
      - name
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        deployment_id:
          type: integer
          writeOnly: true
        start:
          type: string
          format: date-time
          readOnly: true
        end:
          type: string
          format: date-time
          readOnly: true
        day:
          type: string
          format: date
          description: |-
            Consider the start of the event to be the day it occurred on.

            Most overnight monitoring sessions will start in the evening and end the next morning.
          readOnly: true
        date_label:
          type: string
          description: |-
            Format the date range for display.

            If the start and end dates are different, display them as:
            Jan 1-5, 2021
          readOnly: true
        duration:
          type: string
          readOnly: true
        duration_label:
          type: string
          description: |-
            Format the duration for display.

            If duration was populated by a query annotation, use that
            otherwise call the duration() method to calculate it.
          readOnly: true
        captures_count:
          type: integer
          nullable: true
          readOnly: true
        detections_count:
          type: integer
          nullable: true
          readOnly: true
        occurrences_count:
          type: string
          readOnly: true
        stats:
          type: object
          additionalProperties:
            type: integer
            nullable: true
          readOnly: true
        taxa_count:
          type: string
          readOnly: true
        captures:
          type: string
          readOnly: true
        first_capture:
          allOf:
          - $ref: '#/components/schemas/EventCaptureNested'
          readOnly: true
        summary_data:
          type: string
          readOnly: true
        capture_page_offset:
          type: integer
          nullable: true
          description: |-
            Look up the source image (capture) that contains a specific detection or occurrence.

            Return the page offset for the capture to be used when requesting the capture list endpoint.
          readOnly: true
      required:
      - capture_page_offset
      - captures
      - captures_count
      - date_label
      - day
      - deployment
      - deployment_id
      - details
      - detections_count
      - duration
      - duration_label
      - end
      - first_capture
      - id
      - name
      - occurrences_count
      - start
      - stats
      - summary_data
      - taxa_count
    EventCaptureNested:
      type: object
      description: Load the first capture for an event. Or @TODO a single capture
        from the URL params.
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        url:
          type: string
          description: |-
            Return the public URL for this image.

            The base URL is determined by the deployment's data source and is cached
            on the source image. If the deployment's data source changes, the URLs
            for all source images will be updated.

            @TODO use signed URLs if necessary.
            @TODO add support for thumbnail URLs here?
            @TODO consider if we ever need to access the original image directly!
          readOnly: true
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        detections_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        detections:
          type: array
          items:
            $ref: '#/components/schemas/CaptureDetections'
          readOnly: true
      required:
      - details
      - detections
      - id
      - url
    EventList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        start:
          type: string
          format: date-time
          description: The timestamp of the first image in the event.
        end:
          type: string
          format: date-time
          nullable: true
          description: The timestamp of the last image in the event.
        day:
          type: string
          format: date
          description: |-
            Consider the start of the event to be the day it occurred on.

            Most overnight monitoring sessions will start in the evening and end the next morning.
          readOnly: true
        date_label:
          type: string
          description: |-
            Format the date range for display.

            If the start and end dates are different, display them as:
            Jan 1-5, 2021
          readOnly: true
        duration:
          type: string
          readOnly: true
        duration_label:
          type: string
          description: |-
            Format the duration for display.

            If duration was populated by a query annotation, use that
            otherwise call the duration() method to calculate it.
          readOnly: true
        captures_count:
          type: integer
          nullable: true
          readOnly: true
        detections_count:
          type: integer
          nullable: true
          readOnly: true
        occurrences_count:
          type: integer
          nullable: true
          readOnly: true
        taxa_count:
          type: integer
          readOnly: true
        captures:
          type: string
          readOnly: true
        example_captures:
          type: array
          items:
            $ref: '#/components/schemas/SourceImageNested'
          readOnly: true
      required:
      - captures
      - captures_count
      - date_label
      - day
      - deployment
      - details
      - detections_count
      - duration
      - duration_label
      - example_captures
      - id
      - name
      - occurrences_count
      - start
      - taxa_count
    EventNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        date_label:
          type: string
          description: |-
            Format the date range for display.

            If the start and end dates are different, display them as:
            Jan 1-5, 2021
          readOnly: true
      required:
      - date_label
      - details
      - id
      - name
    Identification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserNested'
          readOnly: true
        occurrence:
          allOf:
          - $ref: '#/components/schemas/OccurrenceNested'
          readOnly: true
        occurrence_id:
          type: integer
          writeOnly: true
        taxon:
          allOf:
          - $ref: '#/components/schemas/TaxonNested'
          readOnly: true
        taxon_id:
          type: integer
          writeOnly: true
        withdrawn:
          type: boolean
        agreed_with_identification_id:
          type: integer
          nullable: true
        agreed_with_prediction_id:
          type: integer
          nullable: true
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - details
      - id
      - occurrence
      - occurrence_id
      - taxon
      - taxon_id
      - updated_at
      - user
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        delay:
          type: integer
        limit:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Limit the number of images to process
        shuffle:
          type: boolean
          description: Process images in a random order
        project:
          allOf:
          - $ref: '#/components/schemas/JobProjectNested'
          readOnly: true
        project_id:
          type: integer
          writeOnly: true
          title: Project
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        deployment_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Deployment
        source_image_collection:
          allOf:
          - $ref: '#/components/schemas/SourceImageCollectionNested'
          readOnly: true
        source_image_collection_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Source Image Collection
        source_image_single:
          allOf:
          - $ref: '#/components/schemas/SourceImageNested'
          readOnly: true
        source_image_single_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Source Image
        pipeline:
          allOf:
          - $ref: '#/components/schemas/PipelineNested'
          readOnly: true
        pipeline_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Pipeline
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        started_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        finished_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        duration:
          type: string
          format: duration
          nullable: true
          readOnly: true
        progress:
          type: string
          readOnly: true
        result:
          type: object
          additionalProperties: {}
          readOnly: true
          nullable: true
      required:
      - created_at
      - delay
      - deployment
      - details
      - duration
      - finished_at
      - id
      - name
      - pipeline
      - progress
      - project
      - project_id
      - result
      - source_image_collection
      - source_image_single
      - started_at
      - status
      - updated_at
    JobList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        delay:
          type: integer
        limit:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Limit the number of images to process
        shuffle:
          type: boolean
          description: Process images in a random order
        project:
          allOf:
          - $ref: '#/components/schemas/JobProjectNested'
          readOnly: true
        project_id:
          type: integer
          writeOnly: true
          title: Project
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        deployment_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Deployment
        source_image_collection:
          allOf:
          - $ref: '#/components/schemas/SourceImageCollectionNested'
          readOnly: true
        source_image_collection_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Source Image Collection
        source_image_single:
          allOf:
          - $ref: '#/components/schemas/SourceImageNested'
          readOnly: true
        source_image_single_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Source Image
        pipeline:
          allOf:
          - $ref: '#/components/schemas/PipelineNested'
          readOnly: true
        pipeline_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Pipeline
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        started_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        finished_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        duration:
          type: string
          format: duration
          nullable: true
          readOnly: true
        progress:
          type: string
          readOnly: true
      required:
      - created_at
      - delay
      - deployment
      - details
      - duration
      - finished_at
      - id
      - name
      - pipeline
      - progress
      - project
      - project_id
      - source_image_collection
      - source_image_single
      - started_at
      - status
      - updated_at
    JobProjectNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        details:
          type: string
          format: uri
          readOnly: true
      required:
      - details
      - id
      - name
    JobStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - details
      - id
      - updated_at
    LabelStudioDetection:
      type: object
      description: |-
        Serialize detections for manual annotation of objects of interest in Label Studio.

        Manually specifies the json output to match the Label Studio task format.
        https://labelstud.io/guide/tasks.html
      properties:
        data:
          type: string
          readOnly: true
        annotations:
          type: string
          readOnly: true
        predictions:
          type: string
          readOnly: true
      required:
      - annotations
      - data
      - predictions
    LabelStudioOccurrence:
      type: object
      description: |-
        Serialize occurrences for manual annotation of objects of interest in Label Studio.

        Manually specifies the json output to match the Label Studio task format.
        https://labelstud.io/guide/tasks.html
      properties:
        data:
          type: string
          readOnly: true
        annotations:
          type: string
          readOnly: true
        predictions:
          type: string
          readOnly: true
      required:
      - annotations
      - data
      - predictions
    LabelStudioSourceImage:
      type: object
      description: |-
        Serialize source images for manual annotation of detected objects in Label Studio.

        Manually specifies the json output to match the Label Studio task format.
        https://labelstud.io/guide/tasks.html#Example-JSON-format
      properties:
        data:
          type: string
          readOnly: true
        annotations:
          type: string
          readOnly: true
        predictions:
          type: string
          readOnly: true
      required:
      - annotations
      - data
      - predictions
    MethodEnum:
      enum:
      - common_combined
      - random
      - stratified_random
      - interval
      - manual
      - starred
      - random_from_each_event
      - last_and_random_from_each_event
      - greatest_file_size_from_each_event
      - detections_only
      type: string
      description: |-
        * `common_combined` - common_combined
        * `random` - random
        * `stratified_random` - stratified_random
        * `interval` - interval
        * `manual` - manual
        * `starred` - starred
        * `random_from_each_event` - random_from_each_event
        * `last_and_random_from_each_event` - last_and_random_from_each_event
        * `greatest_file_size_from_each_event` - greatest_file_size_from_each_event
        * `detections_only` - detections_only
    Occurrence:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        event:
          allOf:
          - $ref: '#/components/schemas/EventNested'
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        first_appearance_timestamp:
          type: string
          format: date-time
          nullable: true
          description: |-
            Return the timestamp of the first appearance.
            ONLY if it has been added with a query annotation.
          readOnly: true
        first_appearance_time:
          type: string
          format: time
          nullable: true
          description: |-
            Return the time part only of the first appearance.
            ONLY if it has been added with a query annotation.
          readOnly: true
        duration:
          type: string
          format: duration
          nullable: true
          readOnly: true
        duration_label:
          type: string
          nullable: true
          description: |-
            If duration has been calculated by a query annotation, use that value
            otherwise call the duration() method to calculate it.
          readOnly: true
        determination:
          allOf:
          - $ref: '#/components/schemas/CaptureTaxon'
          readOnly: true
        detections_count:
          type: integer
          nullable: true
          readOnly: true
        detection_images:
          type: string
          readOnly: true
        determination_score:
          type: number
          format: double
          readOnly: true
          nullable: true
        determination_details:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        determination_id:
          type: integer
          nullable: true
          readOnly: true
        detections:
          type: array
          items:
            $ref: '#/components/schemas/DetectionNested'
          readOnly: true
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/OccurrenceIdentification'
          readOnly: true
        predictions:
          type: array
          items:
            $ref: '#/components/schemas/OccurrenceClassification'
          readOnly: true
      required:
      - created_at
      - deployment
      - details
      - detection_images
      - detections
      - detections_count
      - determination
      - determination_details
      - determination_id
      - determination_score
      - duration
      - duration_label
      - event
      - first_appearance_time
      - first_appearance_timestamp
      - id
      - identifications
      - predictions
    OccurrenceClassification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        taxon:
          allOf:
          - $ref: '#/components/schemas/TaxonNested'
          readOnly: true
        score:
          type: number
          format: double
          nullable: true
        algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - algorithm
      - created_at
      - details
      - id
      - taxon
    OccurrenceIdentification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        taxon:
          allOf:
          - $ref: '#/components/schemas/TaxonNested'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserNested'
          readOnly: true
        withdrawn:
          type: boolean
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - details
      - id
      - taxon
      - user
    OccurrenceList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        event:
          allOf:
          - $ref: '#/components/schemas/EventNested'
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        first_appearance_timestamp:
          type: string
          format: date-time
          nullable: true
          description: |-
            Return the timestamp of the first appearance.
            ONLY if it has been added with a query annotation.
          readOnly: true
        first_appearance_time:
          type: string
          format: time
          nullable: true
          description: |-
            Return the time part only of the first appearance.
            ONLY if it has been added with a query annotation.
          readOnly: true
        duration:
          type: string
          format: duration
          nullable: true
          readOnly: true
        duration_label:
          type: string
          nullable: true
          description: |-
            If duration has been calculated by a query annotation, use that value
            otherwise call the duration() method to calculate it.
          readOnly: true
        determination:
          allOf:
          - $ref: '#/components/schemas/CaptureTaxon'
          readOnly: true
        detections_count:
          type: integer
          nullable: true
          readOnly: true
        detection_images:
          type: string
          readOnly: true
        determination_score:
          type: number
          format: double
          nullable: true
        determination_details:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - deployment
      - details
      - detection_images
      - detections_count
      - determination
      - determination_details
      - duration
      - duration_label
      - event
      - first_appearance_time
      - first_appearance_timestamp
      - id
    OccurrenceNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        determination:
          allOf:
          - $ref: '#/components/schemas/CaptureTaxon'
          readOnly: true
      required:
      - details
      - determination
      - id
    Page:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          description: Unique, URL safe name e.g. about-us
          maxLength: 255
        content:
          type: string
          nullable: true
          title: Body content
          description: Use Markdown syntax
        html:
          type: string
          description: Convert the content field to HTML
          readOnly: true
        nav_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: 0 = main nav, 1 = sub nav, etc.
        nav_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Order of nav items within a level
        link_class:
          type: string
          nullable: true
          description: CSS class for nav link
          maxLength: 255
        published:
          type: boolean
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - details
      - html
      - id
      - name
      - slug
      - updated_at
    PageList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          description: Unique, URL safe name e.g. about-us
          maxLength: 255
        nav_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: 0 = main nav, 1 = sub nav, etc.
        nav_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Order of nav items within a level
        link_class:
          type: string
          nullable: true
          description: CSS class for nav link
          maxLength: 255
        published:
          type: boolean
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - details
      - id
      - name
      - slug
      - updated_at
    PaginatedAlgorithmList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Algorithm'
    PaginatedClassificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
    PaginatedDeploymentListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentList'
    PaginatedDetectionListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DetectionList'
    PaginatedDeviceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Device'
    PaginatedEventListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventList'
    PaginatedIdentificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Identification'
    PaginatedJobListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/JobList'
    PaginatedLabelStudioDetectionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/LabelStudioDetection'
    PaginatedLabelStudioOccurrenceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/LabelStudioOccurrence'
    PaginatedLabelStudioSourceImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/LabelStudioSourceImage'
    PaginatedOccurrenceListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OccurrenceList'
    PaginatedPageListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PageList'
    PaginatedPipelineList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Pipeline'
    PaginatedProjectListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectList'
    PaginatedSiteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Site'
    PaginatedSourceImageCollectionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SourceImageCollection'
    PaginatedSourceImageListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SourceImageList'
    PaginatedSourceImageUploadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SourceImageUpload'
    PaginatedStorageSourceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StorageSource'
    PaginatedTaxonListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaxonList'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedAlgorithm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        key:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        url:
          type: string
          format: uri
          maxLength: 200
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        version_name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedClassification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        taxon:
          allOf:
          - $ref: '#/components/schemas/TaxonNested'
          readOnly: true
        score:
          type: number
          format: double
          nullable: true
        algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCurrentUser:
      type: object
      description: |-
        Make additional private fields available for the current user.

        This is used for the `/users/me/` endpoint.
        `email` is read-only because it needs be changed via the `/users/set_email/` endpoint.
        `password` must be changed via the `/users/reset_password/` endpoint.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of User
          maxLength: 255
        details:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        identifications:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
    PatchedDeployment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        details:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentEventNested'
          readOnly: true
        occurrences:
          type: string
          readOnly: true
        events_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        captures_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        occurrences_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        taxa_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectNested'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        first_date:
          type: string
          format: date
          nullable: true
          readOnly: true
        last_date:
          type: string
          format: date
          nullable: true
          readOnly: true
        device:
          allOf:
          - $ref: '#/components/schemas/DeviceNested'
          readOnly: true
        research_site:
          allOf:
          - $ref: '#/components/schemas/SiteNested'
          readOnly: true
        project_id:
          type: integer
          writeOnly: true
        device_id:
          type: integer
          writeOnly: true
        research_site_id:
          type: integer
          writeOnly: true
        data_source:
          type: string
          readOnly: true
        data_source_id:
          type: integer
          writeOnly: true
        description:
          type: string
        example_captures:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentCaptureNested'
          readOnly: true
    PatchedDetection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        bbox:
          type: object
          additionalProperties: {}
          nullable: true
        width:
          type: integer
          nullable: true
          readOnly: true
        height:
          type: integer
          nullable: true
          readOnly: true
        occurrence:
          type: string
          format: uri
          nullable: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        source_image:
          type: string
          format: uri
        detection_algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          readOnly: true
        url:
          type: string
          nullable: true
          readOnly: true
        detection_algorithm_id:
          type: integer
          writeOnly: true
    PatchedDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 80
        description:
          type: string
        project:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        deployment_id:
          type: integer
          writeOnly: true
        start:
          type: string
          format: date-time
          readOnly: true
        end:
          type: string
          format: date-time
          readOnly: true
        day:
          type: string
          format: date
          description: |-
            Consider the start of the event to be the day it occurred on.

            Most overnight monitoring sessions will start in the evening and end the next morning.
          readOnly: true
        date_label:
          type: string
          description: |-
            Format the date range for display.

            If the start and end dates are different, display them as:
            Jan 1-5, 2021
          readOnly: true
        duration:
          type: string
          readOnly: true
        duration_label:
          type: string
          description: |-
            Format the duration for display.

            If duration was populated by a query annotation, use that
            otherwise call the duration() method to calculate it.
          readOnly: true
        captures_count:
          type: integer
          nullable: true
          readOnly: true
        detections_count:
          type: integer
          nullable: true
          readOnly: true
        occurrences_count:
          type: string
          readOnly: true
        stats:
          type: object
          additionalProperties:
            type: integer
            nullable: true
          readOnly: true
        taxa_count:
          type: string
          readOnly: true
        captures:
          type: string
          readOnly: true
        first_capture:
          allOf:
          - $ref: '#/components/schemas/EventCaptureNested'
          readOnly: true
        summary_data:
          type: string
          readOnly: true
        capture_page_offset:
          type: integer
          nullable: true
          description: |-
            Look up the source image (capture) that contains a specific detection or occurrence.

            Return the page offset for the capture to be used when requesting the capture list endpoint.
          readOnly: true
    PatchedIdentification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserNested'
          readOnly: true
        occurrence:
          allOf:
          - $ref: '#/components/schemas/OccurrenceNested'
          readOnly: true
        occurrence_id:
          type: integer
          writeOnly: true
        taxon:
          allOf:
          - $ref: '#/components/schemas/TaxonNested'
          readOnly: true
        taxon_id:
          type: integer
          writeOnly: true
        withdrawn:
          type: boolean
        agreed_with_identification_id:
          type: integer
          nullable: true
        agreed_with_prediction_id:
          type: integer
          nullable: true
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        delay:
          type: integer
        limit:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Limit the number of images to process
        shuffle:
          type: boolean
          description: Process images in a random order
        project:
          allOf:
          - $ref: '#/components/schemas/JobProjectNested'
          readOnly: true
        project_id:
          type: integer
          writeOnly: true
          title: Project
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        deployment_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Deployment
        source_image_collection:
          allOf:
          - $ref: '#/components/schemas/SourceImageCollectionNested'
          readOnly: true
        source_image_collection_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Source Image Collection
        source_image_single:
          allOf:
          - $ref: '#/components/schemas/SourceImageNested'
          readOnly: true
        source_image_single_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Source Image
        pipeline:
          allOf:
          - $ref: '#/components/schemas/PipelineNested'
          readOnly: true
        pipeline_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Pipeline
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        started_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        finished_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        duration:
          type: string
          format: duration
          nullable: true
          readOnly: true
        progress:
          type: string
          readOnly: true
        result:
          type: object
          additionalProperties: {}
          readOnly: true
          nullable: true
    PatchedOccurrence:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        event:
          allOf:
          - $ref: '#/components/schemas/EventNested'
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        first_appearance_timestamp:
          type: string
          format: date-time
          nullable: true
          description: |-
            Return the timestamp of the first appearance.
            ONLY if it has been added with a query annotation.
          readOnly: true
        first_appearance_time:
          type: string
          format: time
          nullable: true
          description: |-
            Return the time part only of the first appearance.
            ONLY if it has been added with a query annotation.
          readOnly: true
        duration:
          type: string
          format: duration
          nullable: true
          readOnly: true
        duration_label:
          type: string
          nullable: true
          description: |-
            If duration has been calculated by a query annotation, use that value
            otherwise call the duration() method to calculate it.
          readOnly: true
        determination:
          allOf:
          - $ref: '#/components/schemas/CaptureTaxon'
          readOnly: true
        detections_count:
          type: integer
          nullable: true
          readOnly: true
        detection_images:
          type: string
          readOnly: true
        determination_score:
          type: number
          format: double
          readOnly: true
          nullable: true
        determination_details:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        determination_id:
          type: integer
          nullable: true
          readOnly: true
        detections:
          type: array
          items:
            $ref: '#/components/schemas/DetectionNested'
          readOnly: true
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/OccurrenceIdentification'
          readOnly: true
        predictions:
          type: array
          items:
            $ref: '#/components/schemas/OccurrenceClassification'
          readOnly: true
    PatchedPage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          description: Unique, URL safe name e.g. about-us
          maxLength: 255
        content:
          type: string
          nullable: true
          title: Body content
          description: Use Markdown syntax
        html:
          type: string
          description: Convert the content field to HTML
          readOnly: true
        nav_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: 0 = main nav, 1 = sub nav, etc.
        nav_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Order of nav items within a level
        link_class:
          type: string
          nullable: true
          description: CSS class for nav link
          maxLength: 255
        published:
          type: boolean
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPipeline:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        version_name:
          type: string
          maxLength: 255
        algorithms:
          type: array
          items:
            $ref: '#/components/schemas/Algorithm'
          readOnly: true
        stages:
          type: string
          readOnly: true
        endpoint_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        description:
          type: string
        details:
          type: string
          format: uri
          readOnly: true
        deployments_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentNestedSerializerWithLocationAndCounts'
          readOnly: true
        summary_data:
          type: string
          readOnly: true
    PatchedSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 80
        description:
          type: string
        project:
          type: integer
        boundary_rect:
          type: array
          items:
            type: number
            format: double
          minLength: 4
          maxLength: 4
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSourceImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        event:
          allOf:
          - $ref: '#/components/schemas/EventNested'
          readOnly: true
        url:
          type: string
          description: |-
            Return the public URL for this image.

            The base URL is determined by the deployment's data source and is cached
            on the source image. If the deployment's data source changes, the URLs
            for all source images will be updated.

            @TODO use signed URLs if necessary.
            @TODO add support for thumbnail URLs here?
            @TODO consider if we ever need to access the original image directly!
          readOnly: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        detections_count:
          type: integer
          readOnly: true
        detections:
          type: array
          items:
            $ref: '#/components/schemas/CaptureDetections'
          readOnly: true
        uploaded_by:
          type: integer
          readOnly: true
        test_image:
          type: boolean
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobStatus'
          readOnly: true
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SourceImageCollectionNested'
          readOnly: true
    PatchedSourceImageCollection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        project:
          type: integer
        method:
          $ref: '#/components/schemas/MethodEnum'
        kwargs:
          $ref: '#/components/schemas/PatchedSourceImageCollectionCommonKwargs'
        source_images:
          type: string
          description: Return URL to the captures endpoint filtered by this collection.
          readOnly: true
        source_image_count:
          type: integer
          readOnly: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobStatus'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSourceImageCollectionCommonKwargs:
      type: object
      properties:
        minute_interval:
          type: integer
          nullable: true
        max_num:
          type: integer
          nullable: true
        month_start:
          type: integer
          nullable: true
        month_end:
          type: integer
          nullable: true
        hour_start:
          type: integer
          nullable: true
        hour_end:
          type: integer
          nullable: true
        size:
          type: integer
          nullable: true
        num_each:
          type: integer
          nullable: true
        exclude_events:
          type: string
          nullable: true
        deployment_id:
          type: integer
          nullable: true
        position:
          type: integer
          nullable: true
    PatchedSourceImageUpload:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
        deployment:
          type: integer
        source_image:
          allOf:
          - $ref: '#/components/schemas/SourceImageNested'
          readOnly: true
        user:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStorageSource:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        bucket:
          type: string
          maxLength: 255
        prefix:
          type: string
          maxLength: 255
        access_key:
          type: string
          writeOnly: true
        secret_key:
          type: string
          writeOnly: true
        endpoint_url:
          type: string
          format: uri
        public_base_url:
          type: string
          format: uri
        project:
          type: integer
        total_files:
          type: integer
          readOnly: true
          nullable: true
        total_size:
          type: integer
          readOnly: true
          nullable: true
        last_checked:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTaxon:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        rank:
          $ref: '#/components/schemas/RankEnum'
        parent:
          allOf:
          - $ref: '#/components/schemas/TaxonNested'
          readOnly: true
        parent_id:
          type: integer
          writeOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        occurrences_count:
          type: integer
          readOnly: true
        detections_count:
          type: integer
          readOnly: true
        events_count:
          type: integer
          readOnly: true
        occurrences:
          type: array
          items:
            $ref: '#/components/schemas/TaxonOccurrenceNested'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of User
          maxLength: 255
        details:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        identifications:
          type: string
          readOnly: true
    Pipeline:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        version_name:
          type: string
          maxLength: 255
        algorithms:
          type: array
          items:
            $ref: '#/components/schemas/Algorithm'
          readOnly: true
        stages:
          type: string
          readOnly: true
        endpoint_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - algorithms
      - created_at
      - details
      - id
      - name
      - slug
      - stages
      - updated_at
    PipelineNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        version_name:
          type: string
          maxLength: 255
      required:
      - details
      - id
      - name
      - slug
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        description:
          type: string
        details:
          type: string
          format: uri
          readOnly: true
        deployments_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentNestedSerializerWithLocationAndCounts'
          readOnly: true
        summary_data:
          type: string
          readOnly: true
      required:
      - created_at
      - deployments
      - deployments_count
      - description
      - details
      - id
      - name
      - summary_data
      - updated_at
    ProjectList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        description:
          type: string
        details:
          type: string
          format: uri
          readOnly: true
        deployments_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
      required:
      - created_at
      - deployments_count
      - description
      - details
      - id
      - name
      - updated_at
    ProjectNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        image:
          type: string
          format: uri
          nullable: true
        details:
          type: string
          format: uri
          readOnly: true
      required:
      - details
      - id
      - name
    RankEnum:
      enum:
      - ORDER
      - SUPERFAMILY
      - FAMILY
      - SUBFAMILY
      - TRIBE
      - SUBTRIBE
      - GENUS
      - SPECIES
      - UNKNOWN
      type: string
      description: |-
        * `ORDER` - Order
        * `SUPERFAMILY` - Superfamily
        * `FAMILY` - Family
        * `SUBFAMILY` - Subfamily
        * `TRIBE` - Tribe
        * `SUBTRIBE` - Subtribe
        * `GENUS` - Genus
        * `SPECIES` - Species
        * `UNKNOWN` - Unknown
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - current_password
      - new_email
    Site:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 80
        description:
          type: string
        project:
          type: integer
        boundary_rect:
          type: array
          items:
            type: number
            format: double
          minLength: 4
          maxLength: 4
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - boundary_rect
      - created_at
      - details
      - id
      - name
      - project
      - updated_at
    SiteNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        details:
          type: string
          format: uri
          readOnly: true
      required:
      - details
      - id
      - name
    SourceImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        event:
          allOf:
          - $ref: '#/components/schemas/EventNested'
          readOnly: true
        url:
          type: string
          description: |-
            Return the public URL for this image.

            The base URL is determined by the deployment's data source and is cached
            on the source image. If the deployment's data source changes, the URLs
            for all source images will be updated.

            @TODO use signed URLs if necessary.
            @TODO add support for thumbnail URLs here?
            @TODO consider if we ever need to access the original image directly!
          readOnly: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        detections_count:
          type: integer
          readOnly: true
        detections:
          type: array
          items:
            $ref: '#/components/schemas/CaptureDetections'
          readOnly: true
        uploaded_by:
          type: integer
          readOnly: true
        test_image:
          type: boolean
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobStatus'
          readOnly: true
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SourceImageCollectionNested'
          readOnly: true
      required:
      - collections
      - deployment
      - details
      - detections
      - detections_count
      - event
      - id
      - jobs
      - uploaded_by
      - url
    SourceImageCollection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        project:
          type: integer
        method:
          $ref: '#/components/schemas/MethodEnum'
        kwargs:
          $ref: '#/components/schemas/PatchedSourceImageCollectionCommonKwargs'
        source_images:
          type: string
          description: Return URL to the captures endpoint filtered by this collection.
          readOnly: true
        source_image_count:
          type: integer
          readOnly: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobStatus'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - details
      - id
      - jobs
      - name
      - project
      - source_image_count
      - source_images
      - updated_at
    SourceImageCollectionNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        details:
          type: string
          format: uri
          readOnly: true
        method:
          $ref: '#/components/schemas/MethodEnum'
      required:
      - details
      - id
      - name
    SourceImageList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        event:
          allOf:
          - $ref: '#/components/schemas/EventNested'
          readOnly: true
        url:
          type: string
          description: |-
            Return the public URL for this image.

            The base URL is determined by the deployment's data source and is cached
            on the source image. If the deployment's data source changes, the URLs
            for all source images will be updated.

            @TODO use signed URLs if necessary.
            @TODO add support for thumbnail URLs here?
            @TODO consider if we ever need to access the original image directly!
          readOnly: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        detections_count:
          type: integer
          readOnly: true
        detections:
          type: array
          items:
            $ref: '#/components/schemas/CaptureDetections'
          readOnly: true
      required:
      - deployment
      - details
      - detections
      - detections_count
      - event
      - id
      - url
    SourceImageNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        url:
          type: string
          description: |-
            Return the public URL for this image.

            The base URL is determined by the deployment's data source and is cached
            on the source image. If the deployment's data source changes, the URLs
            for all source images will be updated.

            @TODO use signed URLs if necessary.
            @TODO add support for thumbnail URLs here?
            @TODO consider if we ever need to access the original image directly!
          readOnly: true
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        event_id:
          type: integer
          readOnly: true
      required:
      - details
      - event_id
      - id
      - url
    SourceImageUpload:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
        deployment:
          type: integer
        source_image:
          allOf:
          - $ref: '#/components/schemas/SourceImageNested'
          readOnly: true
        user:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - deployment
      - details
      - id
      - image
      - source_image
      - user
    StatusEnum:
      enum:
      - CREATED
      - PENDING
      - STARTED
      - SUCCESS
      - FAILURE
      - RETRY
      - CANCELING
      - REVOKED
      - RECEIVED
      - UNKNOWN
      type: string
      description: |-
        * `CREATED` - CREATED
        * `PENDING` - PENDING
        * `STARTED` - STARTED
        * `SUCCESS` - SUCCESS
        * `FAILURE` - FAILURE
        * `RETRY` - RETRY
        * `CANCELING` - CANCELING
        * `REVOKED` - REVOKED
        * `RECEIVED` - RECEIVED
        * `UNKNOWN` - UNKNOWN
    StorageSource:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        bucket:
          type: string
          maxLength: 255
        prefix:
          type: string
          maxLength: 255
        access_key:
          type: string
          writeOnly: true
        secret_key:
          type: string
          writeOnly: true
        endpoint_url:
          type: string
          format: uri
        public_base_url:
          type: string
          format: uri
        project:
          type: integer
        total_files:
          type: integer
          readOnly: true
          nullable: true
        total_size:
          type: integer
          readOnly: true
          nullable: true
        last_checked:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - bucket
      - created_at
      - details
      - endpoint_url
      - id
      - last_checked
      - name
      - project
      - public_base_url
      - total_files
      - total_size
      - updated_at
    StorageStatus:
      type: object
      properties:
        data_source:
          type: string
          maxLength: 200
      required:
      - data_source
    Taxon:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        rank:
          $ref: '#/components/schemas/RankEnum'
        parent:
          allOf:
          - $ref: '#/components/schemas/TaxonNested'
          readOnly: true
        parent_id:
          type: integer
          writeOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        occurrences_count:
          type: integer
          readOnly: true
        detections_count:
          type: integer
          readOnly: true
        events_count:
          type: integer
          readOnly: true
        occurrences:
          type: array
          items:
            $ref: '#/components/schemas/TaxonOccurrenceNested'
          readOnly: true
      required:
      - details
      - detections_count
      - events_count
      - id
      - name
      - occurrences
      - occurrences_count
      - parent
      - parent_id
    TaxonDetections:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          nullable: true
          readOnly: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        details:
          type: string
          format: uri
          readOnly: true
        width:
          type: integer
          nullable: true
          readOnly: true
        height:
          type: integer
          nullable: true
          readOnly: true
      required:
      - details
      - height
      - id
      - url
      - width
    TaxonList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        rank:
          $ref: '#/components/schemas/RankEnum'
        parent:
          allOf:
          - $ref: '#/components/schemas/TaxonParentNested'
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        occurrences_count:
          type: integer
          readOnly: true
        occurrences:
          type: string
          readOnly: true
        occurrence_images:
          type: string
          readOnly: true
        last_detected:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        best_determination_score:
          type: number
          format: double
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - best_determination_score
      - created_at
      - details
      - id
      - last_detected
      - name
      - occurrence_images
      - occurrences
      - occurrences_count
      - parent
      - updated_at
    TaxonNested:
      type: object
      description: Simple Taxon serializer with 2 levels of nesting.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        rank:
          $ref: '#/components/schemas/RankEnum'
        details:
          type: string
          format: uri
          readOnly: true
        parent:
          allOf:
          - $ref: '#/components/schemas/TaxonParentNested'
          readOnly: true
      required:
      - details
      - id
      - name
      - parent
    TaxonNoParentNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        rank:
          $ref: '#/components/schemas/RankEnum'
        details:
          type: string
          format: uri
          readOnly: true
      required:
      - details
      - id
      - name
    TaxonOccurrenceNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
          format: uri
          readOnly: true
        deployment:
          allOf:
          - $ref: '#/components/schemas/DeploymentNested'
          readOnly: true
        event:
          allOf:
          - $ref: '#/components/schemas/EventNested'
          readOnly: true
        determination_score:
          type: number
          format: double
          nullable: true
        determination:
          allOf:
          - $ref: '#/components/schemas/CaptureTaxon'
          readOnly: true
        best_detection:
          allOf:
          - $ref: '#/components/schemas/TaxonDetections'
          readOnly: true
        detections_count:
          type: integer
          nullable: true
          readOnly: true
        duration:
          type: string
          format: duration
          nullable: true
          readOnly: true
        duration_label:
          type: string
          nullable: true
          description: |-
            If duration has been calculated by a query annotation, use that value
            otherwise call the duration() method to calculate it.
          readOnly: true
        first_appearance_timestamp:
          type: string
          format: date-time
          nullable: true
          description: |-
            Return the timestamp of the first appearance.
            ONLY if it has been added with a query annotation.
          readOnly: true
        last_appearance_timestamp:
          type: string
          format: date-time
          nullable: true
          description: |-
            Return the timestamp of the last appearance.
            ONLY if it has been added with a query annotation.
          readOnly: true
      required:
      - best_detection
      - deployment
      - details
      - detections_count
      - determination
      - duration
      - duration_label
      - event
      - first_appearance_timestamp
      - id
      - last_appearance_timestamp
    TaxonParentNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        rank:
          $ref: '#/components/schemas/RankEnum'
        details:
          type: string
          format: uri
          readOnly: true
        parent:
          allOf:
          - $ref: '#/components/schemas/TaxonNoParentNested'
          readOnly: true
      required:
      - details
      - id
      - name
      - parent
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of User
          maxLength: 255
        details:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        identifications:
          type: string
          readOnly: true
      required:
      - details
      - id
      - identifications
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - id
      - password
    UserNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of User
          maxLength: 255
        image:
          type: string
          format: uri
          nullable: true
        details:
          type: string
          format: uri
          readOnly: true
      required:
      - details
      - id
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - new_email
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
